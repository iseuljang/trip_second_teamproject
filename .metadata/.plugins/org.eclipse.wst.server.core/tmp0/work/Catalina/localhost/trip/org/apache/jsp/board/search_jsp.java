/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-14 02:39:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import trip.util.*;
import trip.vo.*;
import trip.dto.*;
import trip.vo.*;
import trip.dao.*;
import trip.dto.*;
import java.io.*;
import java.util.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/board/../include/head.jsp", Long.valueOf(1718259960266L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(9);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("trip.vo");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("trip.dao");
    _jspx_imports_packages.add("trip.dto");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("trip.util");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("  \r\n");

// 첨부파일 저장경로
String uploadPath = "D:\\BTEAM\\trip\\src\\main\\webapp\\upload";

//로그인 여부를 세션을 통해 검사한다
userVO login  = (userVO)session.getAttribute("login");

      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"utf-8\">\r\n");
      out.write("		<title>여행추천가이드</title>\r\n");
      out.write("		<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("		<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/lobby.css\">\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"../css/trip.css\"/>\r\n");
      out.write("	<script src=\"../js/jquery-3.7.1.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		window.onload = function()\r\n");
      out.write("		{\r\n");
      out.write("			$(\".header1\").click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../firstmain/lobby.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			$(\".login\")\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				if($(\"#log_info\").is(\":visible\"))\r\n");
      out.write("				{\r\n");
      out.write("					$(\"#log_info\").css(\"display\",\"none\");\r\n");
      out.write("				}else\r\n");
      out.write("				{\r\n");
      out.write("					$(\"#log_info\").toggle();\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_info\").mouseleave(function()\r\n");
      out.write("			{	\r\n");
      out.write("				$(this).toggle();\r\n");
      out.write("			})	\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_login\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/login.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_join\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/join.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_modify\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../master/user_info.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_write\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../board/write.jsp\";\r\n");
      out.write("			});		\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_admin\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../master/masterGonggiwrite.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_logout\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/logout.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("			$(\"#log_book\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/bookmark.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	<style>\r\n");
      out.write("		.header1\r\n");
      out.write("		{\r\n");
      out.write("			cursor:pointer; cursor:hand;\r\n");
      out.write("		}	\r\n");
      out.write("	\r\n");
      out.write("		#log_info\r\n");
      out.write("		{\r\n");
      out.write("			position: absolute;\r\n");
      out.write("			background-color: white;\r\n");
      out.write("			display: none;\r\n");
      out.write("			top: 67px;\r\n");
      out.write("			left: 1610px;\r\n");
      out.write("			z-index: 1;\r\n");
      out.write("			overflow: hidden;\r\n");
      out.write("			border-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_table\r\n");
      out.write("		{	\r\n");
      out.write("			border-top: none;\r\n");
      out.write("			border-bottom: none;\r\n");
      out.write("			background-color: ghostwhite;\r\n");
      out.write("  			border-style: hidden;\r\n");
      out.write("			border-radius : 10px;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.log_td\r\n");
      out.write("		{	\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			width: 200px;\r\n");
      out.write("			height: 50px;\r\n");
      out.write("			cursor:pointer; cursor:hand;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_logout\r\n");
      out.write("		{\r\n");
      out.write("			border-bottom-left-radius : 10px;\r\n");
      out.write("			border-bottom-right-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_login\r\n");
      out.write("		{\r\n");
      out.write("			border-top-left-radius : 10px;\r\n");
      out.write("			border-top-right-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		");

			if(login == null)
			{
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ 로그인</div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_login\">로그인</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_join\">회원가입</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

			}else if(login.getAdmin().equals("Y"))
			{ 
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ \r\n");
      out.write("						\r\n");
      out.write("							");

							String icon = "😄";
							switch (login.getUicon())
							{
							case "1": icon  = "😄"; break;     				  
	                		case "2": icon  = "😆"; break;  
	                		case "3": icon  = "😅"; break;  
	                		case "4": icon  = "😀"; break;  
	                		case "5": icon  = "😨"; break;  
	                		case "6": icon  = "👿"; break;  
	                		case "7": icon  = "😝"; break;  
	                		case "8": icon  = "😷"; break;  
	                		case "9": icon  = "😴"; break;  
	                		case "10": icon  = "😱"; break;   
			                }
							
      out.write("\r\n");
      out.write("							<span style=\"font-size:30px\">");
      out.print( icon );
      out.write("</span>\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						");
      out.print( login.getUname() );
      out.write(" </div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_modify\">내 정보 수정</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_book\">북마크 보기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_admin\">관리자 페이지</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_logout\">로그아웃</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

				}else
				{
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ \r\n");
      out.write("						");

						String icon = "😄";
						switch (login.getUicon())
							{
	                		case "1": icon  = "😄"; break;     				  
	                		case "2": icon  = "😆"; break;  
	                		case "3": icon  = "😅"; break;  
	                		case "4": icon  = "😀"; break;  
	                		case "5": icon  = "😨"; break;  
	                		case "6": icon  = "👿"; break;  
	                		case "7": icon  = "😝"; break;  
	                		case "8": icon  = "😷"; break;  
	                		case "9": icon  = "😴"; break;  
	                		case "10": icon  = "😱"; break;  
			                }
							
      out.write("\r\n");
      out.write("							<span style=\"font-size:30px\">");
      out.print( icon );
      out.write("</span>\r\n");
      out.write("						\r\n");
      out.write("						");
      out.print( login.getUname() );
      out.write("</div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_modify\">내 정보 수정</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_book\">북마크 보기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_write\" onclick=\"book();\">글쓰기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_logout\">로그아웃</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

				}
			
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

request.setCharacterEncoding("UTF-8");

String kind       = request.getParameter("kind"); 
String pageno  = request.getParameter("page");  // 현재 페이지
String type  = request.getParameter("type");    // 검색 타입(t = 제목에서 검색)

// 6종키워드는 한번에 많이 체크 가능해서 배열로 받음
String[] season   = request.getParameterValues("season"  );
String[] local    = request.getParameterValues("local"   );
String[] human    = request.getParameterValues("human"   );
String[] move     = request.getParameterValues("move"    );
String[] schedule = request.getParameterValues("schedule");
String[] uinout   = request.getParameterValues("uinout"  );
String keyword   = request.getParameter("keyword"  );

if(kind  == null) kind  = "S";
if(pageno  == null) pageno  = "1";
if(type    == null) type    = "T";
if(keyword == null) keyword = "";

// 메인페이지에서 
/* String key_str = "";
if(season!=null){
	for( String item : season)
	{
		key_str += item + ",";
	}
}
if(local!=null){
	for( String item : local)
	{
		key_str += item + ",";
	}
}
if(human!=null){
	for( String item : human)
	{
		key_str += item + ",";
	}
}
if(move!=null){
	for( String item : move)
	{
		key_str += item + ",";
	}
}
if(schedule!=null){
	for( String item : schedule)
	{
		key_str += item + ",";
	}
}
if(uinout!=null){
	for( String item : uinout)
	{
		key_str += item + ",";
	}
}
if(key_str.length() > 0)
{
key_str = key_str.substring(0, key_str.length()-1);
}

if(keyword == null) keyword = new String[] {key_str};
if(keyword!=null) System.out.println(keyword.length); */
// 여기까지
int perPage = 5;  //  페이지당 게시물 갯수
int curpage = 1;  // 현재 페이지
try
{
	curpage = Integer.parseInt(pageno);
}catch(Exception e){}

// 게시물 정보를 srvo객체에 담아 조회한다
boardDTO bdto = new boardDTO();
searchVO srvo = new searchVO();
if(season!=null)srvo.setSeason(season);
if(local!=null)srvo.setLocal(local);
if(human!=null)srvo.setHuman(human);
if(move!=null)srvo.setMove(move);
if(schedule!=null)srvo.setSchedule(schedule);
if(uinout!=null)srvo.setUinout(uinout);

//키워드를 공백을 기준으로 나눠서 배열에 저장
String[] keylist = keyword.split(" ");

ArrayList<boardVO> list = bdto.GetList(curpage, type, keylist, srvo, perPage);

//전체 게시물 갯수를 조회한다.(total = 게시물 갯수)
int total = bdto.GetTotal(type, keylist, srvo);

//최대 페이지 번호를 계산한다.
int maxpage = total / perPage;	//(maxpage = 최대 페이지)
if( total % perPage != 0) maxpage++; 
// (seqNo = 게시판 번호) 게시판 번호 = 게시물 갯수 -((현재페이지-1)*페이지당 개시물 갯수) 
int seqNo = total -((curpage-1)*perPage);

//파라메터를 생성한다.
String search_param = "";
search_param += Param.getParam(season,"season");
search_param += "&";
search_param += Param.getParam(local,"local");
search_param += "&";
search_param += Param.getParam(human,"human");
search_param += "&";
search_param += Param.getParam(move,"move");
search_param += "&";
search_param += Param.getParam(schedule,"schedule");
search_param += "&";
search_param += Param.getParam(uinout,"uinout");

String param = "";
param += "type=" + type;
param += "&";
param += "keyword=" + keyword;
param += "&";
param += "kind=" + kind;
param += "&";
param += search_param;

      out.write("    \r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/index(search_result).css\">\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function()\r\n");
      out.write("{\r\n");
      out.write("	\r\n");
      out.write("	$(\"#keyword\").keyup(function(e){\r\n");
      out.write("		if(e.which == 13)\r\n");
      out.write("		{\r\n");
      out.write("			DoSearch();	\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// write_button(글쓰기 버튼) 클래스를 클릭시 write.jsp로 이동\r\n");
      out.write("	$(\".write_button\").click(function(){\r\n");
      out.write("		if(confirm(\"글쓰기 페이지로 이동하시겠습니까?\") == true)\r\n");
      out.write("		{\r\n");
      out.write("			document.location = \"../board/write.jsp\";\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// keyword_button(키워드 선택) 클래스를 클릭시  main.jsp + 6종키워드 + 검색타입 + 검색어\r\n");
      out.write("	$(\".keyword_button\")\r\n");
      out.write("	.click(function()\r\n");
      out.write("	{\r\n");
      out.write("		if(confirm(\"키워드선택 페이지로 이동하시겠습니까?\") == true)\r\n");
      out.write("		{\r\n");
      out.write("			document.location = \"../firstmain/main.jsp?");
      out.print( search_param );
      out.write("&type=\" + $(\"#type\").val() + \"&keyword=\" + $(\"#keyword\").val();\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// index_btn(전체글 보기) 아이디를 클릭시 index.jsp + 6종키워드 + 검색타입 + 검색어\r\n");
      out.write("	$(\"#index_btn\")\r\n");
      out.write("	.click(function()\r\n");
      out.write("	{\r\n");
      out.write("		document.location = \"../board/index.jsp?");
      out.print( param );
      out.write("\";\r\n");
      out.write("	});\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	function view(a)\r\n");
      out.write("	{\r\n");
      out.write("		document.location = 'view.jsp?' + a;\r\n");
      out.write("	} \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/* function ksubmit()\r\n");
      out.write("{\r\n");
      out.write("	$(\"#keyward\").submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function btn()\r\n");
      out.write("{\r\n");
      out.write("	$(\"#keyward\").submit();\r\n");
      out.write("}\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function()// 첫번째 슬라이드	\r\n");
      out.write("{\r\n");
      out.write("	var firstSlide = \r\n");
      out.write("	$('.slider').find('li').first()			// slider 클래스를 찾아 li요소중 첫번째 li요소를 선택(첫번째 슬라이드만 선택)\r\n");
      out.write("	.stop(true).animate({'opacity':1},200);	//  animate({'opacity':설정값},지연시간)/페이드인효과 서서히 나타남   *설정값 : 0 - 투명/ 1 - 불투명  *1초 = 1000밀리세컨드\r\n");
      out.write("      \r\n");
      out.write("	// 이전버튼 함수\r\n");
      out.write("	function PrevSlide()\r\n");
      out.write("	{ \r\n");
      out.write("	    stopSlide(); startSlide();		//타이머 초기화\r\n");
      out.write("	    \r\n");
      out.write("	    var lastSlide = $('.slider').find('li').last()	//마지막 슬라이드\r\n");
      out.write("	    .prependTo( $('.slider'));						//마지막 슬라이드를 맨 앞으로 보내기	\r\n");
      out.write("	     						  \r\n");
      out.write("	    secondSlide =  $('.slider').find('li').eq(1)	//두 번째 슬라이드 구하기\r\n");
      out.write("	    .stop(true).animate({'opacity':0},400); 		//밀려난 두 번째 슬라이드는 fadeOut 시키고\r\n");
      out.write("	    \r\n");
      out.write("	    firstSlide =  $('.slider').find('li').first() 	//맨 처음 슬라이드 다시 구하기\r\n");
      out.write("	    .stop(true).animate({'opacity':1},400);			//새로 들어온 첫 번째 슬라이드는 fadeIn 시키기\r\n");
      out.write("	 }\r\n");
      out.write("	 \r\n");
      out.write("	// 다음 버튼 함수	  \r\n");
      out.write("  	function NextSlide()\r\n");
      out.write("  	{ \r\n");
      out.write("   	 	stopSlide();startSlide();		//타이머 초기화\r\n");
      out.write("   	 	\r\n");
      out.write("    	firstSlide = $('.slider').find('li').first() 	// 첫 번째 슬라이드\r\n");
      out.write("	    .appendTo($('.slider')); 					 	// 맨 마지막으로 보내기\r\n");
      out.write("	    \r\n");
      out.write("	    var lastSlide = $('.slider').find('li').last() 	// 맨 마지막으로 보낸 슬라이드\r\n");
      out.write("	    .stop(true).animate({'opacity':0},400); 		// fadeOut시키기\r\n");
      out.write("	    \r\n");
      out.write("	    firstSlide = $('.slider').find('li').first()	// 맨 처음 슬라이드\r\n");
      out.write("	    .stop(true).animate({'opacity':1},400);			// fadeIn 시키기\r\n");
      out.write(" 	 }\r\n");
      out.write("  \r\n");
      out.write("    $('#next').on('click', function()\r\n");
      out.write("	{ \r\n");
      out.write("		// 다음버튼 클릭\r\n");
      out.write("    	NextSlide();\r\n");
      out.write("    });\r\n");
      out.write("  \r\n");
      out.write("	 $('#prev').on('click', function()\r\n");
      out.write("	 { \r\n");
      out.write("		// 이전 버튼 클릭\r\n");
      out.write("	 	PrevSlide();\r\n");
      out.write("	 });\r\n");
      out.write("  \r\n");
      out.write("	// 자동 슬라이드 시작\r\n");
      out.write("	startSlide();\r\n");
      out.write("	var theInterval;\r\n");
      out.write("	\r\n");
      out.write("	//자동 슬라이드 설정\r\n");
      out.write("	function startSlide()\r\n");
      out.write("	{\r\n");
      out.write("		theInterval = setInterval(NextSlide, 5000); \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//자동 멈추기\r\n");
      out.write("	function stopSlide() \r\n");
      out.write("	{ \r\n");
      out.write("		clearInterval(theInterval);\r\n");
      out.write("	}\r\n");
      out.write("	  \r\n");
      out.write("	//마우스 오버시 슬라이드 멈춤\r\n");
      out.write("	$('.slider').hover(function()\r\n");
      out.write("	{ \r\n");
      out.write("		stopSlide();\r\n");
      out.write("	}, \r\n");
      out.write("	function()\r\n");
      out.write("	{\r\n");
      out.write("		startSlide();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// 슬라이드에서 얻은 게시물번호로 링크\r\n");
      out.write("	$('.slider > #divSlide').on('click', function()\r\n");
      out.write("	{ \r\n");
      out.write("		firstSlide = $('.slider').find('li').first();\r\n");
      out.write("		//alert($(firstSlide).attr(\"no\"));\r\n");
      out.write("		\r\n");
      out.write("		bno = $(firstSlide).attr(\"no\");\r\n");
      out.write("		document.location = \"view.jsp?");
      out.print( param );
      out.write("&no=\" + bno;\r\n");
      out.write("	});	\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write(" \r\n");
      out.write("function view(a)\r\n");
      out.write("{\r\n");
      out.write("	document.location = 'view.jsp?' + a;\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("// 검색 네비게이션\r\n");
      out.write("function DoSearch()\r\n");
      out.write("{\r\n");
      out.write("	document.location = \"search.jsp?");
      out.print( search_param );
      out.write("&type=\" + $(\"#type\").val() + \"&keyword=\" + $(\"#keyword\").val();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("		\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<table border=\"0\" style=\"width: 90%;\" align=\"center\">\r\n");
      out.write("			<tr align=\"center\">\r\n");
      out.write("				<td>\r\n");
      out.write("					<section style=\"height: 450px;\">\r\n");
      out.write("						<ul class=\"slider\">\r\n");
      out.write("							");
  // 슬라이드 타이틀 좌우로 보일수 있도록  
							int count = 0;
							for(boardVO vo : list)
							{								
								if(count%2 == 1)
								{	
									
      out.write("\r\n");
      out.write("									<li id=\"divSlide\" no=\"");
      out.print( vo.getBno() );
      out.write("\">\r\n");
      out.write("										<div style=\"background-image: url(../upload/");
      out.print( vo.getFname() );
      out.write(");  background-position: 0px -250px; cursor: pointer;\">                                                                           \r\n");
      out.write("											<dl>\r\n");
      out.write("												<dt>");
      out.print( vo.getBtitle() );
      out.write("</dt>\r\n");
      out.write("												<dd></dd>\r\n");
      out.write("											</dl>\r\n");
      out.write("										</div>\r\n");
      out.write("									</li>	\r\n");
      out.write("									");

								}else{
									
      out.write("\r\n");
      out.write("									<li id=\"divSlide\" no=\"");
      out.print( vo.getBno() );
      out.write("\">\r\n");
      out.write("										<div style=\"background-image: url(../upload/");
      out.print( vo.getFname() );
      out.write("); background-position: 0px -250px; cursor: pointer;\">  \r\n");
      out.write("											<dl class=\"right\">\r\n");
      out.write("												<dt>");
      out.print( vo.getBtitle() );
      out.write("</dt>\r\n");
      out.write("												<dd></dd>\r\n");
      out.write("											</dl>\r\n");
      out.write("										</div>\r\n");
      out.write("									</li>	\r\n");
      out.write("									");

								}
								count++;
							}
							
      out.write("\r\n");
      out.write("						</ul>\r\n");
      out.write("						<div class=\"btn\" style=\"padding-top: 470px;\">\r\n");
      out.write("							<button type=\"button\" id=\"prev\" style=\"width: 35px;\">◀</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							<button type=\"button\" id=\"next\" style=\"width: 35px;\">▶</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</section>\r\n");
      out.write("				</td>					\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<table border=\"0\" style=\"width: 90%; margin-top: 100px;\" align=\"center\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td style=\"text-align: left; width: 550px; font-size : 20px; font-weight : 500; \"><b>키워드</b> &nbsp;&nbsp; : \r\n");
      out.write("				");
      out.print( Param.setItem(season,"hotpink") );
      out.write("   <!-- 배열로 넘어오는 season을 param클래스를 활용하여 향상된 for문에 color를 대입하여 값 출력 -->\r\n");
      out.write("				");
      out.print( Param.setItem(local,"saddlebrown") );
      out.write("\r\n");
      out.write("				");
      out.print( Param.setItem(human,"orangered") );
      out.write("\r\n");
      out.write("				");
      out.print( Param.setItem(move,"royalblue") );
      out.write("\r\n");
      out.write("				");
      out.print( Param.setItem(schedule,"darkmagenta") );
      out.write("\r\n");
      out.write("				");
      out.print( Param.setItem(uinout,"#FFBF00") );
      out.write("\r\n");
      out.write("				<br>\r\n");
      out.write("				검색결과 : ");
      out.print( total );
      out.write("개\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>			\r\n");
      out.write("				<select id=\"type\" name=\"type\" style=\"width: 120px; height: 35px; font-size: 20px; font-align=center; margin-right : 20px;\">\r\n");
      out.write("					<option value=\"T\" ");
      out.print( type.equals("T") ? "selected" : "" );
      out.write(">제목</option>\r\n");
      out.write("					<option value=\"N\" ");
      out.print( type.equals("N") ? "selected" : "" );
      out.write(">내용</option>\r\n");
      out.write("					<option value=\"U\"  ");
      out.print( type.equals("U")  ? "selected" : "" );
      out.write(">닉네임</option>\r\n");
      out.write("					<option value=\"\" ");
      out.print( type.equals("") ? "selected" : "" );
      out.write(">제목+내용</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				");
  // 검색된 
				String searchKeys = "";
				for(String key : keylist)
				{
					System.out.println("key : " + key);
					System.out.println("length : " + key.length());
					if(key.length() > 0 ){searchKeys += (key + " ");}
					
				}
				System.out.println("searchKeys : " + searchKeys);
				System.out.println("length : " + searchKeys.length());
				
      out.write("\r\n");
      out.write("				<input id=\"keyword\" name=\"keyword\" type=\"text\" style=\"font-size: 20px; height: 33px;\" placeholder=\"검색어를 입력해주세요.\" value=\"");
      out.print( searchKeys );
      out.write("\">\r\n");
      out.write("				<input type=\"button\" onclick=\"DoSearch();\" id=\"keyward\"  value=\"검색하기\" class=\"search_button\" >&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("			</td>\r\n");
      out.write("			<td style=\"text-align: right;\">\r\n");
      out.write("				<button type=\"button\" class=\"keyword_button\">키워드 재선택</button>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td style=\"text-align: right;\">\r\n");
      out.write("				<button type=\"button\" class=\"write_button\">글쓰기</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<hr style=\"margin-top : 20px; margin-bottom : 20px;\">\r\n");
      out.write("	<div style=\"text-align: right; padding-right: 100px; padding-bottom: 10px; border-color : white;\">\r\n");
      out.write("		<button type=\"button\" id=\"index_btn\">전체글 보기</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<table border=\"1\" style=\"width: 90%; font-size: 18px;\" align=\"center\">\r\n");
      out.write("		<tr style=\"background-color: lightgray;\">\r\n");
      out.write("			<td style=\"width: 50px;\">번호</td>\r\n");
      out.write("			<td style=\"width: 150px;\">키워드</td>\r\n");
      out.write("			<td style=\"width: 300px;\">제목</td>\r\n");
      out.write("			<td style=\"width: 80px;\">닉네임</td>\r\n");
      out.write("			<td style=\"width: 80px;\">작성일</td>\r\n");
      out.write("			<td style=\"width: 50px;\">조회수</td>\r\n");
      out.write("			<td style=\"width: 50px;\">추천수</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		");
 
		
		for(boardVO vo : list)
		{
			String link_str = "";
			link_str = param;
			link_str += "&page=" + curpage + "&no=" + vo.getBno();
			
      out.write("\r\n");
      out.write("			<tr onclick=\"view('");
      out.print( link_str );
      out.write("');\" style=\"cursor: pointer;\">\r\n");
      out.write("				<td>");
      out.print( seqNo-- );
      out.write("</td>\r\n");
      out.write("				<td>\r\n");
      out.write("					<span style=\"width: 130px; font-size: 13px;\">\r\n");
      out.write("						<span style=\"color: hotpink; width: 20px; margin:1px;\">\r\n");
      out.write("							");
      out.print( vo.getSeason() );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<span style=\"color: saddlebrown; width: 20px; \">\r\n");
      out.write("							");
      out.print( vo.getLocal() );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<span style=\"color: orangered; width: 20px; margin:1px;\">\r\n");
      out.write("							");
      out.print((vo.getHuman() != null && !vo.getHuman().equals("null"))?vo.getHuman():"" );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<span style=\"color: royalblue; width: 20px; margin:1px;\">\r\n");
      out.write("							");
      out.print((vo.getMove()!= null && !vo.getMove().equals("null"))?vo.getMove():"" );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<span style=\"color: darkmagenta; width: 20px; margin:1px;\">\r\n");
      out.write("							");
      out.print((vo.getSchedule()!= null &&!vo.getSchedule().equals("null"))?vo.getSchedule():"" );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<span style=\"color: #FFBF00; text-shadow: 0.5px -1px 0.5px black; width: 20px; margin:1px;\">\r\n");
      out.write("							");
      out.print((vo.getUinout()!= null &&!vo.getUinout().equals("null"))?vo.getUinout():"" );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("					</span>\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>\r\n");
      out.write("				");
      out.print(vo.getBtitle() );
      out.write(" \r\n");
      out.write("				");

					if(!vo.getRno().equals("0"))
					{
						
      out.write("\r\n");
      out.write("						<span style=\"color:#ff6600; \">(");
      out.print( vo.getRno() );
      out.write(")</span>\r\n");
      out.write("						");

					}
				
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print(vo.getUnick() );
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(vo.getBwdate() );
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(vo.getBhit() );
      out.write("</td>\r\n");
      out.write("				<td>\r\n");
      out.write("				");

				int up_total =  bdto.recoTotal(vo.getBno());
				
      out.write("\r\n");
      out.write("				");
      out.print( up_total );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

		}
		
      out.write("\r\n");
      out.write("	</table>	\r\n");
      out.write("		<table border=\"0\" style=\"width: 70%;\" align=\"center\">\r\n");
      out.write("		<tr style=\"font-size: 25px;\">\r\n");
      out.write("			<td>\r\n");
      out.write("			");

			//페이징 시작블럭번호와 끝블럭 번호를 계산한다
			int startBlock = ( (curpage - 1)  / 10) * 10 + 1;
			int endBlock   = startBlock + 10 - 1; 
			
			//endBlock 이 최대 페이지 번호보다 크면 안됨.
			if( endBlock > maxpage)
			{
				//예: maxpage가 22인데, endBlock이 30이면 endBlock을 22로 변경
				endBlock = maxpage;
			}	

			//이전 페이지 블럭을 표시한다.
			if(startBlock != 1)
			{
				
      out.write("\r\n");
      out.write("				<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=1\">◁◁</a>&nbsp;\r\n");
      out.write("				<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=");
      out.print( startBlock - 1 );
      out.write("\">◀</a>&nbsp;\r\n");
      out.write("				");

			}	
			
			//화면에 블럭 페이징을 표시한다.
			for(int pno = startBlock ; pno <= endBlock; pno++)
			{
				if( curpage == pno)
				{
					//현재 페이지 이면....
					
      out.write("<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=");
      out.print( pno );
      out.write("\"><b style=\"color:red;\">");
      out.print( pno );
      out.write("</b></a>&nbsp;");

				}else
				{
					
      out.write("<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=");
      out.print( pno );
      out.write('"');
      out.write('>');
      out.print( pno );
      out.write("</a>&nbsp;");
	
				}
			}
			
			//다음 페이지 블럭을 표시한다.
			if(endBlock < maxpage)
			{
				
      out.write("\r\n");
      out.write("				<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=");
      out.print( endBlock + 1 );
      out.write("\">▶</a>&nbsp;\r\n");
      out.write("				<a href=\"search.jsp?");
      out.print( param );
      out.write("&page=");
      out.print( maxpage );
      out.write("\">▷▷</a>&nbsp;\r\n");
      out.write("				");

			}
			
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
