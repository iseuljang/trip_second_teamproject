/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-04 08:19:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.master;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import trip.vo.*;
import trip.dto.*;

public final class masterMembercheckok_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("trip.vo");
    _jspx_imports_packages.add("trip.dto");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("     \r\n");

String unick = request.getParameter("unick");
if(unick == null)
{
	//닉네임 정보가 올바르게 전송되지 않음
	unick = "";
}

String ustop = request.getParameter("ustop");
String uno = request.getParameter("uno");
if(ustop == null)
{
	ustop = "";
}

userDTO dto = new userDTO();

userVO user = dto.ShowUser(unick);


if( user == null)
{
	//조회가 안되었을 경우 빈 가짜 정보를 만든다.
	user = new userVO(); 
	user.SetBlank();
	user.setUid("조회된 닉네임이 없습니다.");
}
dto.Stop(ustop,uno);

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("td\r\n");
      out.write("{\r\n");
      out.write("	font-size : 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#stopbtn\r\n");
      out.write("{\r\n");
      out.write("	width:60px;\r\n");
      out.write("	height:35px;\r\n");
      out.write("	background-color: rightgray;\r\n");
      out.write("	font-size:15px;\r\n");
      out.write("	margin:5px;\r\n");
      out.write("	border:0;\r\n");
      out.write("	cursor:pointer; cursor:hand;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("#check\r\n");
      out.write("{\r\n");
      out.write("	width:60px;\r\n");
      out.write("	height:35px;\r\n");
      out.write("	background-color: rightgray;\r\n");
      out.write("	color:white;\r\n");
      out.write("	font-size:20px;\r\n");
      out.write("	margin:5px;\r\n");
      out.write("	border:0;\r\n");
      out.write("	cursor:pointer; cursor:hand;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#unick\r\n");
      out.write(" {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 40px;;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	border:none;\r\n");
      out.write("	border-bottom: solid #aaaaaa 1px;\r\n");
      out.write("	padding-left: 10px;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	text-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<table border=\"0\" width=\"1280px\" align=\"left\" id=\"user_show\" style=\"font-size:25px;\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td id=\"nick_w\"><b>닉네임</b></td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"unick\" id=\"unick\" value=\"");
      out.print( user.getUnick() );
      out.write("\" placeholder=\"조회할 닉네임 입력\">\r\n");
      out.write("			<button type=\"button\" id=\"check\" onclick=\"usercheck();\"><b>조회</b></button>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">아이디 : ");
      out.print( user.getUid() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">이름 : ");
      out.print( user.getUname() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">닉네임 : ");
      out.print( user.getUnick() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">이메일 : ");
      out.print( user.getEmail() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">탈퇴여부 : \r\n");
      out.write("		");

		if(user.getUretire() == null || user.getUretire().equals("N"))
		{
			
      out.write(" 활동회원 ");

		}else if(user.getUretire().equals(""))
		{
			
      out.write(' ');

		}
		else
		{
			
      out.write(" 탈퇴회원 ");

		}
		
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">회원이용정지 : \r\n");
      out.write("			<select name=\"ustop\" id=\"ustop\" style=\"font-size:22px;\">\r\n");
      out.write("				<option value=\"7\" selected>1주일</option>\r\n");
      out.write("				<option value=\"14\">2주일</option>\r\n");
      out.write("				<option value=\"30\">한달</option>\r\n");
      out.write("				<option value=\"0\">영구</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			&nbsp;&nbsp;\r\n");
      out.write("			<button type=\"button\" name=\"stopbtn\" id=\"stopbtn\" onclick=\"userstop(");
      out.print( user.getUno() );
      out.write(");\">\r\n");
      out.write("				<b>정지</b>\r\n");
      out.write("			</button>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\">정지여부 : \r\n");
      out.write("		");

		if(user.getUstop() == null || user.getUstop().equals("N"))
		{
			
      out.write(" 해당없음 ");

		}else if(user.getUstop().equals(""))
		{
			
      out.write(' ');

		}else
		{
			
      out.write("정지회원");

		}
		
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>정지종료일 : </td>\r\n");
      out.write("		<td>\r\n");
      out.write("		");

		if(user.getUstopend() == null || user.getUstopend().equals(""))
		{
			
      out.write(' ');

		}else
		{
			
      out.print( user.getUstopend() );

		}
		
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("	\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
