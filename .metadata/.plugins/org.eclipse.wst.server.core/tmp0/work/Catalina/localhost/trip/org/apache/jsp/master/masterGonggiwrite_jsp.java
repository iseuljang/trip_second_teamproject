/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-21 03:04:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.master;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import trip.vo.*;
import trip.dao.*;
import trip.dto.*;
import java.io.*;
import java.util.*;

public final class masterGonggiwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/master/../include/head.jsp", Long.valueOf(1718935882379L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(8);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("trip.vo");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("trip.dao");
    _jspx_imports_packages.add("trip.dto");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("  \r\n");

// 첨부파일 저장경로
String uploadPath = "D:\\BTEAM\\trip\\src\\main\\webapp\\upload";

//로그인 여부를 세션을 통해 검사한다
userVO login  = (userVO)session.getAttribute("login");

      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"utf-8\">\r\n");
      out.write("		<title>여행추천가이드</title>\r\n");
      out.write("		<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("		<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/lobby.css\">\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"../css/trip.css\"/>\r\n");
      out.write("	<script src=\"../js/jquery-3.7.1.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		window.onload = function()\r\n");
      out.write("		{\r\n");
      out.write("			$(\".header1\").click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../firstmain/lobby.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			$(\".login\")\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				if($(\"#log_info\").is(\":visible\"))\r\n");
      out.write("				{\r\n");
      out.write("					$(\"#log_info\").css(\"display\",\"none\");\r\n");
      out.write("				}else\r\n");
      out.write("				{\r\n");
      out.write("					$(\"#log_info\").toggle();\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_info\").mouseleave(function()\r\n");
      out.write("			{	\r\n");
      out.write("				$(this).toggle();\r\n");
      out.write("			})	\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_login\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/login.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_join\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/join.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_modify\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			})\r\n");
      out.write("			.click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../master/user_info.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_write\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../board/write.jsp\";\r\n");
      out.write("			});		\r\n");
      out.write("			\r\n");
      out.write("			$(\"#log_admin\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../master/masterGonggiwrite.jsp\";\r\n");
      out.write("			});	\r\n");
      out.write("				\r\n");
      out.write("			$(\"#log_logout\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/logout.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("			$(\"#log_book\")\r\n");
      out.write("			.mouseover(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"lightgray\");\r\n");
      out.write("			})\r\n");
      out.write("			.mouseout(function()\r\n");
      out.write("			{\r\n");
      out.write("				$(this).css(\"background-color\", \"\");\r\n");
      out.write("			}).click(function()\r\n");
      out.write("			{\r\n");
      out.write("				document.location = \"../user/bookmark.jsp\";\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function setCookie(name, value, exp)\r\n");
      out.write("		{\r\n");
      out.write("			var date = new Date();\r\n");
      out.write("			date.setTime(date.getTime() + exp*24*60*60*1000);\r\n");
      out.write("			document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';  \r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		function getCookieVal(name) \r\n");
      out.write("		{\r\n");
      out.write("			var value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n");
      out.write("			return value? value[2] : null;\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		function delCookie(name)\r\n");
      out.write("		{\r\n");
      out.write("			let todayDate = new Date();\r\n");
      out.write("			document.cookie = name + \"=; path=/; expires=\" + todayDate.toGMTString() + \";\"\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	<style>\r\n");
      out.write("		.header1\r\n");
      out.write("		{\r\n");
      out.write("			cursor:pointer; cursor:hand;\r\n");
      out.write("		}	\r\n");
      out.write("	\r\n");
      out.write("		#log_info\r\n");
      out.write("		{\r\n");
      out.write("			position: absolute;\r\n");
      out.write("			background-color: white;\r\n");
      out.write("			display: none;\r\n");
      out.write("			top: 67px;\r\n");
      out.write("			left: 1610px;\r\n");
      out.write("			z-index: 1;\r\n");
      out.write("			overflow: hidden;\r\n");
      out.write("			border-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_table\r\n");
      out.write("		{	\r\n");
      out.write("			border-top: none;\r\n");
      out.write("			border-bottom: none;\r\n");
      out.write("			background-color: ghostwhite;\r\n");
      out.write("  			border-style: hidden;\r\n");
      out.write("			border-radius : 10px;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.log_td\r\n");
      out.write("		{	\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			width: 200px;\r\n");
      out.write("			height: 50px;\r\n");
      out.write("			cursor:pointer; cursor:hand;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_logout\r\n");
      out.write("		{\r\n");
      out.write("			border-bottom-left-radius : 10px;\r\n");
      out.write("			border-bottom-right-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#log_login\r\n");
      out.write("		{\r\n");
      out.write("			border-top-left-radius : 10px;\r\n");
      out.write("			border-top-right-radius : 10px;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		");

			if(login == null)
			{
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ 로그인</div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_login\">로그인</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_join\">회원가입</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

			}else if(login.getAdmin().equals("Y"))
			{ 
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ \r\n");
      out.write("						\r\n");
      out.write("							");

							String icon = "😄";
							switch (login.getUicon())
							{
							case "1": icon  = "😄"; break;     				  
	                		case "2": icon  = "😆"; break;  
	                		case "3": icon  = "😅"; break;  
	                		case "4": icon  = "😀"; break;  
	                		case "5": icon  = "😨"; break;  
	                		case "6": icon  = "👿"; break;  
	                		case "7": icon  = "😝"; break;  
	                		case "8": icon  = "😷"; break;  
	                		case "9": icon  = "😴"; break;  
	                		case "10": icon  = "😱"; break;   
			                }
							
      out.write("\r\n");
      out.write("							<span style=\"font-size:30px\">");
      out.print( icon );
      out.write("</span>\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						");
      out.print( login.getUname() );
      out.write(" </div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_modify\">내 정보 수정</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_book\">북마크 보기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_admin\">관리자 페이지</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_logout\">로그아웃</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

				}else
				{
				
      out.write("\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td><div class=\"header1\"></div></td>\r\n");
      out.write("						<td><div class=\"login\">≡ \r\n");
      out.write("						");

						String icon = "😄";
						switch (login.getUicon())
							{
	                		case "1": icon  = "😄"; break;     				  
	                		case "2": icon  = "😆"; break;  
	                		case "3": icon  = "😅"; break;  
	                		case "4": icon  = "😀"; break;  
	                		case "5": icon  = "😨"; break;  
	                		case "6": icon  = "👿"; break;  
	                		case "7": icon  = "😝"; break;  
	                		case "8": icon  = "😷"; break;  
	                		case "9": icon  = "😴"; break;  
	                		case "10": icon  = "😱"; break;  
			                }
							
      out.write("\r\n");
      out.write("							<span style=\"font-size:30px\">");
      out.print( icon );
      out.write("</span>\r\n");
      out.write("						\r\n");
      out.write("						");
      out.print( login.getUname() );
      out.write("</div></td>\r\n");
      out.write("						</tr>	\r\n");
      out.write("					</table>\r\n");
      out.write("					<div class=\"hline\"></div>\r\n");
      out.write("					<div id=\"log_info\">\r\n");
      out.write("						<table border=\"1\" id=\"log_table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_modify\">내 정보 수정</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_book\">북마크 보기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_write\" onclick=\"book();\">글쓰기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"log_td\" id=\"log_logout\">로그아웃</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				");

				}
			
      out.write('\r');
      out.write('\n');
      out.write(" \r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/masterGonggiwrite.css\">    \r\n");

// -------------------- 값 수령 --------------------
String pageno  = request.getParameter("page");

// 페이징 기본설정
if(pageno  == null || pageno.equals("")) 
{
	pageno  = "1";
}

int curpage = 1;
try{
		curpage = Integer.parseInt(pageno);
}catch(Exception e){  }

// ------------------ 페이징 설정 ----------------------
adminboardDTO dto = new adminboardDTO();
int total = dto.GetTotal();
int perPage = 5;
int maxpage = total / perPage;	
if( total % perPage != 0) maxpage++;

// --------------------- 접근제어 ------------------
// 비로그인시 
if(login == null)
{
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		alert(\"로그인이 필요합니다.\");\r\n");
      out.write("		if(confirm(\"로그인 페이지로 이동하시겠습니까?\") == true)\r\n");
      out.write("		{\r\n");
      out.write("			document.location = \"../user/login.jsp\";\r\n");
      out.write("			return;\r\n");
      out.write("		}else\r\n");
      out.write("		{\r\n");
      out.write("			document.location = \"../firstmain/lobby.jsp\";\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("	");
 
	return;
}

//관리자 권한이 없을시
if(dto.CheckAdmin(login.getUid()) == false)
{
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		alert(\"해당 회원은 관리자 권한이 없습니다.\");\r\n");
      out.write("		history.back();\r\n");
      out.write("		return;\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("	");
 
	return;
}

      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$(\".tr\")\r\n");
      out.write("		.mouseover(function(){\r\n");
      out.write("			$(this).css(\"background-color\", \"#F0F1EC\");\r\n");
      out.write("		})\r\n");
      out.write("		.mouseout(function()\r\n");
      out.write("		{\r\n");
      out.write("			$(this).css(\"background-color\", \"\");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 수동으로 전체선택시, 전체선택 버튼이 자동으로 체크되고 \r\n");
      out.write("		// 하나라도 체크가 안 되면, 자동으로 전체선택버튼 체크가 풀림 \r\n");
      out.write("		$(\".checkbox1\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			var selAll = $('input:checkbox[name=selAll]');\r\n");
      out.write("			var each_view = $('input:checkbox[name=checkbox1]');\r\n");
      out.write("			var checked_view = $('input:checkbox[name=checkbox1]:checked');\r\n");
      out.write("			\r\n");
      out.write("			if(each_view.length == checked_view.length)  \r\n");
      out.write("			{\r\n");
      out.write("				// **제이쿼리로 찾기 때문에 selAll은 제이쿼리 객체에 담겨져있는 원소임**\r\n");
      out.write("				selAll[0].checked = true;\r\n");
      out.write("			\r\n");
      out.write("			}else \r\n");
      out.write("			{\r\n");
      out.write("				selAll[0].checked = false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// ----------------- 공지작성 버튼 ------------------  \r\n");
      out.write("	function writegonggi()\r\n");
      out.write("	{\r\n");
      out.write("		if(confirm(\"글작성 페이지로 이동하시겠습니까?\") == true)\r\n");
      out.write("		{\r\n");
      out.write("			document.location = \"masterwrite.jsp\";\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("	} \r\n");
      out.write("	\r\n");
      out.write("	// ----------------- 공지삭제 버튼 ----------------- \r\n");
      out.write("	function batchDel()\r\n");
      out.write("	{\r\n");
      out.write("		var checked = $('input:checkbox[name=checkbox1]:checked');\r\n");
      out.write("		var checkedValueTotal = \"\"\r\n");
      out.write("		\r\n");
      out.write("		if(checked.length == 0)\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"삭제할 게시글을 선택해주세요.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(confirm(\"해당 공지글 '\" + checked.length +\"' 개를 삭제하시겟습니까?\") == false) \r\n");
      out.write("		{\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// $.each 를 통해 체크된 항목의 adno의 값을 차례로 받아와 ajax로 전송\r\n");
      out.write("		$(checked).each(function(){\r\n");
      out.write("			if(checkedValueTotal != \"\")\r\n");
      out.write("			{\r\n");
      out.write("				checkedValueTotal += \",\"	\r\n");
      out.write("			}\r\n");
      out.write("			checkedValueTotal += $(this).val(); // --> **checked가 아닌 $(this)\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"post\",\r\n");
      out.write("			url  : \"masterGonggidelete.jsp?checkedValueTotal=\"+checkedValueTotal,\r\n");
      out.write("			datatype : \"html\",\r\n");
      out.write("			success : function(result)\r\n");
      out.write("			{\r\n");
      out.write("				result = result.trim();\r\n");
      out.write("				switch(result)\r\n");
      out.write("				{\r\n");
      out.write("					 case \"0\" : \r\n");
      out.write("						alert(\"오류로 인해 삭제에 실패했습니다.\");\r\n");
      out.write("						break;\r\n");
      out.write("						\r\n");
      out.write("					case \"1\" : \r\n");
      out.write("						alert(\"해당 게시글\" + checked.length + \"개가 삭제되었습니다.\");\r\n");
      out.write("						break;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		location.reload();\r\n");
      out.write("	}\r\n");
      out.write("		\r\n");
      out.write("	// ------------- 게시물 전체 체크 버튼 ----------------\r\n");
      out.write("	function select_all(obj)\r\n");
      out.write("	{\r\n");
      out.write("		if($(obj).is(\":Checked\") == true)\r\n");
      out.write("		{\r\n");
      out.write("			var choose_all = $(obj).is(\":Checked\");\r\n");
      out.write("			var each_view = $('input:checkbox[name=checkbox1]');\r\n");
      out.write("			\r\n");
      out.write("			$(each_view).each(function(){\r\n");
      out.write("				this.checked = true;\r\n");
      out.write("			\r\n");
      out.write("			});\r\n");
      out.write("		}else if($(obj).is(\":Checked\") == false)\r\n");
      out.write("		{\r\n");
      out.write("			var choose_all = $(obj);\r\n");
      out.write("			var each_view = $('input:checkbox[name=checkbox1]');\r\n");
      out.write("			\r\n");
      out.write("			$(each_view).each(function(){\r\n");
      out.write("				this.checked = false;\r\n");
      out.write("			\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// --------------- 공지 게시글 선택시 주소설정 함수 -------------------\r\n");
      out.write("	function view(obj)\r\n");
      out.write("	{\r\n");
      out.write("		document.location = 'masterview.jsp?' + obj;\r\n");
      out.write("	} \r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write(".tr\r\n");
      out.write("{\r\n");
      out.write("	cursor : hand; cursor : pointer;\r\n");
      out.write("}\r\n");
      out.write(".btn\r\n");
      out.write("{\r\n");
      out.write("	border: 0px; \r\n");
      out.write("	font-size: 25px;\r\n");
      out.write("	border-radius: 0.2em;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	color: white; \r\n");
      out.write("	margin-bottom : 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("	<form method=\"post\" name=\"masterGonggiwrite\" id=\"masterGonggiwrite\" action=\"masterwrite.jsp\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- 중간부분입니다 -->\r\n");
      out.write("	<div style=\"margin-top:100px\"></div>\r\n");
      out.write("	<table border=\"0\" width=\"90%\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td id=\"td1\" style=\"vertical-align: top; width : 300px;\">\r\n");
      out.write("				<a href=\"masterMembercheck.jsp\" ><b>회원조회</b></a>\r\n");
      out.write("				<hr>\r\n");
      out.write("				<a href=\"masterGonggiwrite.jsp\" ><b style=\"color:#1ABC9C\">공지사항</b></a>\r\n");
      out.write("				<hr>\r\n");
      out.write("				<a href=\"masterADindex.jsp\" ><b>광고 관리</b></a>\r\n");
      out.write("				<hr>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td style=\"background-color:gray;\"></td>\r\n");
      out.write("			<td id=\"td2\">\r\n");
      out.write("				<table border=\"0\" width=\"100%\" style=\"border-collapse: collapse;\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"5\" align=\"right\">\r\n");
      out.write("							<button type=\"button\" class =\"btn\" id=\"write_btn\" onclick=\"writegonggi();\" style=\"background-color : royalblue; margin-right : 20px;\">공지 작성</button>\r\n");
      out.write("							<button type=\"button\" class =\"btn\" id=\"delete_btn\" onclick=\"batchDel();\" style=\"background-color : deeppink;\">일괄 삭제</button>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr  class=\"top_tr\" id=\"tr_top\">\r\n");
      out.write("						<th style=\"text-align : left; width : 165px;\">\r\n");
      out.write("							전체 선택 &nbsp;\r\n");
      out.write("							<input type=\"checkbox\" id=\"selAll\" name=\"selAll\" onclick=\"select_all(this);\">\r\n");
      out.write("						</th>\r\n");
      out.write("						<th>번호</th>\r\n");
      out.write("						<th>제목</th>\r\n");
      out.write("						<th>시작일</th>\r\n");
      out.write("						<th>종료일</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					int seqNo = total -((curpage - 1) * 5);
					ArrayList<adminboardVO> alist = dto.GetList(curpage);
					for(adminboardVO vo : alist)
					{
						String link_str = "";
						link_str = "page="+ pageno;
						link_str += "&adno=" + vo.getAdno();
						
      out.write("\r\n");
      out.write("						<tr class=\"tr\" id=\"repeat_tr\">\r\n");
      out.write("							<td>\r\n");
      out.write("								<input type=\"checkbox\" name=\"checkbox1\"  class=\"checkbox1\" value=\"");
      out.print( vo.getAdno() );
      out.write("\">\r\n");
      out.write("							</td>\r\n");
      out.write("							<td onclick=\"view('");
      out.print( link_str );
      out.write("');\">");
      out.print( seqNo -- );
      out.write("</td>\r\n");
      out.write("							<td onclick=\"view('");
      out.print( link_str );
      out.write("');\">");
      out.print( vo.getAdtitle() );
      out.write("</td>\r\n");
      out.write("							<td onclick=\"view('");
      out.print( link_str );
      out.write("');\">");
      out.print( vo.getStartday() );
      out.write("</td>\r\n");
      out.write("							<td onclick=\"view('");
      out.print( link_str );
      out.write("');\">");
      out.print( vo.getEndday() );
      out.write("</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");
 
					}
						
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td style=\"background-color:gray;\">\r\n");
      out.write("			</td>\r\n");
      out.write("			<td style=\"font-size: 25px; text-align:center; padding left : 300px; border : 0;\" >\r\n");
      out.write("			");

			// **페이징 시작블럭번호와 끌블럭 번호를 계산 
			int startBlock = ((curpage - 1) / 10) * 10 + 1; // -> ex) 1,  11, 21 ,31
			int endBlock = startBlock + 9;					// -> ex) 10, 20, 30 ,40
			
			// endBlock이 최대 페이지 번호보다 크면 안됨
			if( endBlock > maxpage)
			{
				endBlock = maxpage;
			}	

			//이전 페이지 블럭을 표시한다.
			if(startBlock != 1)
			{
				
      out.write("<a href=\"masterGonggiwrite.jsp?page=");
      out.print( startBlock - 1 );
      out.write("\">◀</a>&nbsp;");

			}	
			
			//화면에 블럭 페이징을 표시한다.
			for(int pno = startBlock ; pno <= endBlock; pno++)
			{
				if( curpage == pno)
				{
					//현재 페이지 이면....
					
      out.write("<a href=\"masterGonggiwrite.jsp?page=");
      out.print( pno );
      out.write("\"><b style=\"color:red;\">&nbsp;&nbsp;&nbsp;(");
      out.print( pno );
      out.write(")</b></a>&nbsp;");

				}else
				{
					
      out.write("<a href=\"masterGonggiwrite.jsp?page=");
      out.print( pno );
      out.write("\">&nbsp;&nbsp;&nbsp;");
      out.print( pno );
      out.write("</a>&nbsp;");
	
				}
			}
			
			//다음 페이지 블럭을 표시한다.
			if(endBlock < maxpage)
			{
				
      out.write("<a href=\"masterGonggiwrite.jsp?page=");
      out.print( endBlock + 1 );
      out.write("\">▶</a>&nbsp;");

			}
			
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
