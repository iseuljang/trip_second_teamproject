/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-18 08:46:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import trip.vo.*;
import trip.dto.*;

public final class loadvip_005fitem_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("trip.vo");
    _jspx_imports_packages.add("trip.dto");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    userVO login  = (userVO)session.getAttribute("login");

    String Pri = request.getParameter("Pri");
    String bno = request.getParameter("bno");  //  <- 노출 정보 저장을 위해 추가
    
    advertDTO advdto = new advertDTO();
    advertVO vad = advdto.vip_ad(Integer.parseInt(Pri));
    String Adurl = vad.getDetailURL();
    
 	// ========================= 광고노출 관련 코드(유이강) ===============================
 	// ------------- 필요한 DTO, VO 선언 -------------
 	ad_exposureDTO ex_dto = new ad_exposureDTO();
	ad_exposureVO ex_vo_vip    = new ad_exposureVO();
	
	// ------------- 해당 광고(vip)노출 정보를 테이블에 저장 -------------
	ex_vo_vip.setAdvertno(vad.getAdvertno());
	ex_vo_vip.setBno(bno);
	
	if (login != null && login.getUno() != null)
	{
		ex_vo_vip.setUno(login.getUno());
	}
	boolean ex_vo_vip_whether = true;
	
	ex_dto.Insert(ex_vo_vip, ex_vo_vip_whether);
	
	

      out.write("\r\n");
      out.write("	<div id=\"ad1-1\" class=\"ad1-1\"  style=\"background-image:url(");
      out.print( vad.getImageURL() );
      out.write(");\"></div>\r\n");
      out.write("	<div id=\"ad1-2\" class=\"ad1-2\"> <!-- 광고하단 1 -->\r\n");
      out.write("	<input type=\"hidden\" id=\"adurl\" name=\"adurl\" value=\"");
      out.print( Adurl );
      out.write("\">\r\n");
      out.write("	<table border =\"0\" style=\"margin-top:20px; height:20px\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th style=\"height:48px; word-break:break-all;\" colspan=\"2\">");
      out.print( vad.getProductName() );
      out.write("</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("	<td style=\"width:166; vertical-align:bottom; text-align: left; padding-top: 10px; padding-left: 20px;\">\r\n");
      out.write("		<button class=\"btn-open-modal\">Modal열기</button>\r\n");
      out.write("	</td>\r\n");
      out.write("	<td style=\"width:154; vertical-align:bottom; text-align: right; padding-top: 10px; padding-right: 20px;\">\r\n");
      out.write("		");
      out.print( vad.getPrice() );
      out.write("원\r\n");
      out.write("	</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
